PROBLEM 1: Make API with lots of bugs work

BUG 1:
LINE 21
Should be req.query, not req.params

BUG 2:
Line 42
getProtectedCompanies is async, we should await

BUG 3: The users should be sorted by Name, but they are sorted by id instead.
LINE 54
We pass users to getAdminUser. Inside getAdminUser, we have a sort function which mutates the original array.
Moreover, array are passed by reference and not value. So, the original array <users> is being modified.

BUG 4: 
Line 75
If response?.affectedRows === 0, we should insert a row not respond with status 500




PROBLEM 2:
2 APIs
First one INSERTs a row.
Second one UPDATEs the row created in the first API.
Problem: There are occasions where the second is API is hit too early, and API number 1 has not inserted the row yet.
How would you resolve this issue? 
Possible solution: QUEUEING




PROBLEM 3:
1. Explain how you would ensure that an online application/website can scale to handle increased call volumes during peak times.
Describe the stages, technologies, and tools you would use.

2. How would you design a CI/CD pipeline for deploying updates to the online application?
Describe the stages, technologies, and tools you would use.

3. How would you implement monitoring and handle rollbacks in your CI/CD pipeline for the online application?
Describe the stages, technologies, and tools you would use.

4. How do you approach monitoring and logging?
What tools and practices do you use to ensure system reliability and performance?
Describe the stages, technologies, and tools you would use.