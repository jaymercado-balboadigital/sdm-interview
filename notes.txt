PROBLEM 1: Make API with lots of bugs work

BUG 1:
LINE 21
Should be req.query, not req.params

BUG 2:
Line 42
getProtectedCompanies is async, we should await

BUG 3: The users should be sorted by Name, but they are sorted by id instead.
LINE 54
We pass users to getAdminUser. Inside getAdminUser, we have a sort function which mutates the original array.
Moreover, array are passed by reference and not value. So, the original array <users> is being modified.

BUG 4: 
Line 75
If response?.affectedRows === 0, we should insert a row not respond with status 500




PROBLEM 2:
2 APIs
First one INSERTs a row.
Second one UPDATEs the row created in the first API.
Problem: There are occasions where the second is API is hit too early, and API number 1 has not inserted the row yet.
How would you resolve this issue? 
Possible solution: QUEUEING




PROBLEM 3: algorithm

Initialize two stacks. One stack will be used for enqueuing operations, and the other for dequeuing.
Enqueue operation will push the element to the first stack.
Dequeue operation will check if the second stack is empty.
If it is empty, all elements from the first stack are popped and pushed into the second stack, effectively reversing their order.
Then, the top element of the second stack is popped.
Peek operation is similar to dequeue but returns the element without removing it.
Empty operation checks if both stacks are empty.